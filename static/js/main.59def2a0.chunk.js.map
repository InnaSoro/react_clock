{"version":3,"sources":["Clock.jsx","App.js","index.js"],"names":["Clock","state","time","Date","this","timerID","setInterval","step","prevProps","name","props","console","log","clearInterval","setState","className","toLocaleTimeString","React","Component","App","isClockVisible","clockName","Math","round","random","hide","show","setName","date","onClick","type","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,G,MAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aACb,kBAAM,EAAKC,SACX,OARN,gCAYE,SAAmBC,GACbA,EAAUC,OAASL,KAAKM,MAAMD,MAEhCE,QAAQC,IAAR,qCAA0CJ,EAAUC,KAApD,eAA+DL,KAAKM,MAAMD,SAfhF,kCAmBE,WACEI,cAAcT,KAAKC,WApBvB,kBAuBE,WACED,KAAKU,SAAS,CAAEZ,KAAM,IAAIC,SAxB9B,oBA2BE,WAAU,IACAD,EAASE,KAAKH,MAAdC,KAER,OACE,yBAAKa,UAAU,sBACb,mDAAqBb,EAAKc,uBAC1B,uDAAyBZ,KAAKM,MAAMD,YAjC5C,GAA2BQ,IAAMC,YC8DlBC,E,4MA3DblB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,W,EAY7BC,KAAO,WACL,EAAKX,SAAS,CAAEM,gBAAgB,K,EAGlCM,KAAO,WACL,EAAKZ,SAAS,CAAEM,gBAAgB,K,EAGlCO,QAAU,WACR,EAAKb,SAAS,CAAEO,UAAWC,KAAKC,MAAsB,IAAhBD,KAAKE,a,uDAlB7C,WACElB,aAAY,WACV,IAAMsB,EAAO,IAAIzB,KAGjBQ,QAAQC,IAAIgB,EAAKZ,wBAChB,O,oBAeL,WACE,OACE,yBAAKD,UAAU,YACb,wBAAIA,UAAU,eAAd,eACCX,KAAKH,MAAMmB,gBAAkB,kBAAC,EAAD,CAAOX,KAAML,KAAKH,MAAMoB,YACtD,yBAAKN,UAAU,eACb,4BACEA,UAAU,0BACVc,QAASzB,KAAKsB,KACdI,KAAK,UAHP,cAOA,4BACEf,UAAU,0BACVc,QAASzB,KAAKqB,KACdK,KAAK,UAHP,cAOA,4BACEf,UAAU,0BACVc,QAASzB,KAAKuB,QACdG,KAAK,UAHP,yB,GA/CQb,IAAMC,W,MCAxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.59def2a0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    time: new Date(),\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.step(),\n      1000,\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  step() {\n    this.setState({ time: new Date() });\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <div className=\"card-content clock\">\n        <p>{`Current time: ${time.toLocaleTimeString()}`}</p>\n        <span>{`Currenet name: ${this.props.name}`}</span>\n      </div>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\n\nimport './App.scss';\nimport { Clock } from './Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: Math.round(Math.random() * 100),\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      const date = new Date();\n\n      // eslint-disable-next-line\n      console.log(date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  hide = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  show = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  setName = () => {\n    this.setState({ clockName: Math.round(Math.random() * 100) });\n  }\n\n  render() {\n    return (\n      <div className=\"App card\">\n        <h1 className=\"card-header\">React clock</h1>\n        {this.state.isClockVisible && <Clock name={this.state.clockName} />}\n        <div className=\"card-footer\">\n          <button\n            className=\"button card-footer-item\"\n            onClick={this.show}\n            type=\"button\"\n          >\n            Show Clock\n          </button>\n          <button\n            className=\"button card-footer-item\"\n            onClick={this.hide}\n            type=\"button\"\n          >\n            Hide Clock\n          </button>\n          <button\n            className=\"button card-footer-item\"\n            onClick={this.setName}\n            type=\"button\"\n          >\n            Set random name\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bulma/css/bulma.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}